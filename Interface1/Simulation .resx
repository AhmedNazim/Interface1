<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7pAAAO6QEOM0IcAAAAB3RJ
        TUUH5AwFFzMylvpvQgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABkWSURBVHhe
        7Z0LlBxVncZrZpKZ6brVM0NIQjQ5PCLySiCQBEJm+t7qmYRo0D2uWeEcdV0XXNdVd9c9KOJCIt1V1RMQ
        QjTKwZzdZX0soEE4iK7LrooiChJEooAoogiIgLxEXkIC7Pef3BybpiczPdOPqurvd87vTDLxYPet+r66
        9XZI8zlrYGRMQkibEWWMU/DyPesHRva3vyKEtAMSfjgbXhZ65kL7a0JI2ikL/1WhMs+iAC6y/0QISTMI
        fUdZ+F9mARDSJiD05Vt+CT8LgJB2YJzwswAISTt7CT8LgJA0M0H4WQCEpJlQ+XsLv8gCICSNIPhzUABX
        Vgl9uSwAQtIGwj8XXhlUD325LABC0gSCP0/Cj3C/VBH2arIACEkLCP5r4BUI9osVQR9PFgAhaQDBnw+/
        glDvqgj53mQBEJJ0EPwFkTsW/p0VAZ9IFgAhSQbh3x/hvxxhfqEi3JORBUBIUkH4D0D4tyHIUwm/yAIg
        JIkg/Afa8D9fEepaZAEQkjQQ/oMQ/i8jwH+qCHStsgAISRII/+vqFH6RBUBIUkD4D0b4v4TgPlcR5KnK
        AiAkCSD8r7fhf7YixNORBUBI3EH4D0H4LxsLbPUgT1UWACFxBuE/1Ib/mYrw1kMWACFxBeE/DOG/FEF9
        uiK49ZIFQEgcQfgPb3D4RRYAIXED4T8C4b8EAX2qIrD1lgVASJxA+Bc1KfwiC4CQuIDwL7bh/2NFUBsl
        C4CQOGDD/18IZbPCL7IACGk1CP+RLQi/yAIgpJUg/EfZ8D9ZEc5myAIgpFXY8H8RQWxF+EUWACGtAOFf
        YsP/h4pQNlMWACHNBuE/OgbhF1kAhDSTGIVfZAEQ0ixs+L+A4D1REcRWyQIgpBkg/MfELPwiC4CQRhPT
        8IssAEIaCcK/NKbhF1kAhDSKmIdfZAEQ0ggQruXh7vA/Xha4uLkzVHp7pMyGcvG51+PfzrR+DP+bj8LT
        8fvTAtf8S+SZDwRKn4J/Ozly/RPxU4dZvWS0zxxwbtZkX3acDjsMhLQfCMRyKJf3xnXLX668RlzeJlyu
        vGBU3jYkyuPH5VmE8kgyuVdBTl/+Ht4L74Q3w2vhVSiGz+PnZhjsLhH/I/jd+1AeJxeVzoeuPqTk5bN2
        mAhJHzLtRwDkPH8Swt8opVSkPOQS5wfgzwJlrsNPeZ/Bp1AIRfw8A7sffw9PjPryC0tzV3XbISQkmWCl
        TsK0Pw7KDEMeeHI/3I4SuBS7HudHrjk7dP0PoizWhpncgoKzqMsOLSHxBlv+ZViZ233LPx1l1iC7Gw/C
        m6AU6ScCpc8MPPPXUdZfPJrN99rhJiQ+YEXllr8xykxBdiN+Aa+GWzA7OBOuCzND8zFD6LSLgJDWMLbl
        j/epvjQpByhlnHfAS0Olz8fs4ENF5a8oZPLKLhJCmgNWQjnaL9N+bvlboxxo/B38Vuj6W0Plnxl6ZgTy
        TANpLFjpknSqrx2U2cFj8AfwYhTC+sgzptSnOTMg9QVbmGOxksnTexn+eCoHFKUMrof/ESn9r9hVOy7q
        NTyISKYHVijZ8kv443A/P51YmRnIhUvfCZXeivJ+b6l3aN45zjIeQCS1MXaRDw/4JVk5ZvAreCV2D85D
        GeQhZwVkYrCi7Nny84BfOpQLkX4YKv/ioqffW8yYgYKT5z0M5NVgRZGLfDjtT6d7ZgVXREpv2NjvLzh3
        Vp67B2Q3mPYfg2l/XJ7hRxunHDh8GP5PoPSmIJNbDFkE7QxWBrmxh6f62k+5+vC6wNMXlbL5odEsZwRt
        B7b8R3PL3/bKLdDbQ+V/btTTGvIYQTsg4Y92h59bfirKTUo/Clzzn8V+/xi7mpA0ggV9NOQBP1rN5+BN
        kWe2Rt7IIrvKkLSAhSvhvxS26l19NBk+DW8MlL7grIGROXb1IUkG0/6jsM/fqrf00mT6RKTMtYFnzig4
        +Zl2VSJJAwvyKMgtP52KcvpQHmLytUCZt9pViiQFbPkX2y2/PPCy2gKmdDLuhHeFyv9iaWDVYrt6kTgj
        4Y8Yflpf5QnKN4eeDgrOIt5nEFewkBbDyyDDT+ut3IH4CMRugc7bVY7EBWz5j8CWX071yQ0h1RYgpfXw
        efizyDOfKs1d1W9XP9JKEP7DGX7aROUgoVxT8s1Q6b+0qyFpBaFnjsCCuBwy/LTZyl2Hd2M2sPk8Z02f
        XSVJs8CW/1Bs+WWfX67vrraAKG20u2cDrvlGoHTOrpqk0SD8h9jwyxVc1RYMpc107NhA6OkN25yTZtjV
        lDQChP/13PLTGCpnCh6NlLlkg+svtKsrqSfY5z8EXoGBlnOz1RYCpa1Udglk3byhlMmfbFdbUg+w5X8d
        tvxfwuDKHVzVBp/SuChXEf4mUHqU9xTUAYT/IIRfXkXN8NOkKLOBJ8YuJfby8+2qTGoF4T/Qhl8e4lBt
        oCmNs89FynwrcHPartJksmDwDoSyz8/w0yQr1wzcFrrmPXbVJhOBAdsfXgnlFEu1QaU0ScpZggdKygQ8
        VTgBmPYvwLRfrvCT5qw2mJQmUTku8GSo/K3RvisH7OpOykH45yP8X8FAMfw0rT4XKLMtyOQOsqs9ERD+
        10AJv5xGqTZwlKbFFyLlXxN5+eV29W9vMCDz4FfhLjtAlKZdrOv6xtA1a20M2hMMxH7waigHSqoNFKVp
        VY4L/DTyTHteOYgp/xwoR/tlIKoNEKVpV9b9nweu+Rsbi/SDLyzhnw2vKhsIStvZXweefh92C9L9yjKE
        XgpgDvx62ZenNLm6VX43NR9AAXwIuwTpfIEpvqATudzyU7oXH0IBnBYo3WVjkw7GtvwIP74gt/yU7t2H
        UQAfCT0/HVcNIvwdkFt+SifvAyiAf46UTvYtxfgiHbLlZ/gprdnfoAD+IfBMt41TspBpv+zz44tw2k/p
        1PwlCuDUMOMnqwTwwcf2+bnlp3SauuYOFMA7S0mZCUSuL3LLT2mdjJS5JfLMWwPlx/+YAMLfCT+DD84r
        /Citn99BAYyMZvPxPjuwwfU7Pu76yyJX348PzRKgtE5iJnBlyfOXlrx8vC8WsiWwHCVwLz44S4DS+ig3
        zf1bpPyFo07MLxsuZHRnMaOPQwncgw/NEqC0Pr4Quua8Uo+/3zbnJJu2mIKZQOfZrr8CJfArfHCWAKX1
        8WnMAjac4w7H//FimAl0YSawEiVwNz44S4DS+vgg/EDkaWWjFl8wE+g62zVSAnfhQ7MEKK2PO0JPrysq
        v8dGLb7YEhhECfwCH5wlQGkdDJS5KlD+sYX+1fG/gxC7AzOwO5BDCdyJD88SoHT6vhgqf0vg5fcv2JzF
        GswEZhRco1ECd+DDswQonb5Pw49F7tA+NmbxBiUwEyVgUAK344OzBCidvvdGyv/byM27NmbxBrsDM4OM
        zqMEbsOHZwlQOm3960LXzxeUTsbDRDAT6MZMIB+6+if4AiwBSqenZGhrqHILX7YZiz22BIYxE9hhv0C1
        L0YpnZzPRkp/ZKOXS847CLE70B24egQzgVvxBVgClE7PO0PPrIO9NmLxBzOBHswEVqEEfowvwBKgdHpe
        AY8qOPnkvGtASqDomtXYHbgFH54lQOnU3Rm6Jgoyej8br2SA3YEe7A6cgJnAzfgSLAFKp+5DgdLvCjyd
        jFODe8BMoBczASmB7fgSLAFKpygK4BrMBJZucdYm67VjtgTWYHeAJUDp1N0VuaYw6ubn2mglB+wO9GJ3
        4A2YCfwQX4QlQOnUvC9SZl2UzSXnrMAe7EyAJUDpdPTMV0Ivd1gibhiqBCWQQQm8ESVwI74MS4DS2n0h
        9PTpKIFZNlbJwpbAWpTADfgyLAFKa/fnmAmsLnkxf7T4eBQyOhO4+kSUwA/wZVgClNaqZy4KPX9/G6nk
        ITOBwDUsAUqn5uPw7ZEyGRup5IGZgIuZwJtQAt/Hl2EJUFqbXy8pfVhi7hisBmYCbtE1UgLX4wuxBCid
        vM9HnvmnUtb02zglE5YApVPUM7ciN8cWnGXxfs3YREgJBCwBSmv1pdA1pcg1ybtCsBJ7TODNKIHvjX2x
        6l+YUvpK7ws87a/vH0zmacFyds8EWAKU1iIK4JNwno1RsimbCVyHL8cSoHRiH0IBDBe8hDxIdCLsMQGW
        AKWTNFDmIvgaG6HkY0vgL1gClE7KRyLlr97oDs+0EUo+LAFKa/Ji+Fobn3RgDwyyBCid2MdSNwsQChmt
        WAKUTsp/h+k4I1AOZwKUTspHRrP+igv2HYn/q8ZrhTMBSie25JlPjGbNvjY26YIHBindu5Ey92909aKt
        zrJkPUV4srAEKN2rL6EEzoDJvlNwb9gS4MVClFYR4b8TLrRxSSdlBwZ57wClr3RXpPxTI5VP1huFaoV3
        EVI6jq75Hpxvo5Je7EyAJUDpK30GM4CVo9lV6TslWEnZTIAPFaHUWvLMFpjM9wjUiswE+HgxSsvVv93o
        Dh2Y6IeH1kJZCfBpw5Qq82LkmndHrk7uI8RrxZaAvHeAJUDb3sjzvwv3s/FoD1ACfAMRpbt9JurLLYn2
        XZnspwfXSmHsNWR8AxGlgWdKgednbTTaB5kJoABOxD5Q3N9K/GLomgcC1//25DXXwu9Fytxs/RH8SeSZ
        u/Dfuz9Q5vf4+Qf4DHwBsgTb15/D9N0mPBmCTE5KYC1K4IcYhLiG4E/wy0HGP3LymiOxm7MEoV/6Z/3l
        KIDj8d8aQjkYlEAefx4JlV6NnydgS/AW+P4QWwT4Ofzu2/Bn8CEoRbELVvt8NNm+UMjmlq3vH0z/NQHV
        SEAJPCtvfbUft2GcNTDSVeg32Shr9sP/30EohkVQSmMIP/3I9VdjJvIu+Al8pv9GgdyBn49CmUFU+9w0
        Kbr+Jswc2283YA+2BN6IErgJAxK3EmhKAUzENuekjlIPdpsyZh7CfyhmC0vx2QZDlctHnn43iuJC/F2O
        qfwOPg+rfRcaT38F2+tsQCVSAkXXvAFFsB2DEacSiEUBjEfBcTo29g25o1kzHzOFI/B5j8XPIYzjO1EU
        W/HZd4TKfxK/f7HsO9F4ubPo6RUFT7fnbsAeNrh+L0pgDVbemzEocSmBWBfAeAS9OhMofwE++2IUwHGR
        8t8aev4nMVO4Fd/paRjXYy5taeSaC6OMad/dgD1ICaAA1mB34EcYmDispIksgEpKXr47zPrzUAAyS1ge
        eLm/w5+vxJ9ll4EHGFuuvgfOtourvcHugJTACSiBWzA4rS6BVBRAJcXsoBd5+gB8v6OKnr+m6JlPY8x/
        gb/z+EELxO7aztGe3MEXOCvT+biwWkEJ9GB3YBVWyh9jgFpZAqksgHLOGhiZiX3Q/TDWh426+eXYXTgD
        swOMu2YZNNHI9T8aufleu1gIdgd6sFKuxkxgBwaoVSWQ+gIoZ+xsg+cPoABeF2bM8YGrNwWuuRvjwN2E
        xnsDHLCLgggyEyi4ZgRF0KoSaKsCKKfg5Dsx/rNRAAePZof9wPMvxqxALkyKw7GZ9OmapyCPA1SCmUB3
        mNEjmAn8FAPV7JWvbQugnE2z1sxAAcxFARwsBxAxLtvx550VY0Wn50tR/8gbSgOr0vE68XqCLVE3ZgJ5
        lMBtMlAVA9dIWQAVFLODLsZlwWhv/ujQ8y/Cnx+HnBXUQ898Hio71KQczARmhpmclIBcBtusFY4FMA5b
        nLWdYdafhTE6ELOBDwee/jX+zCKYhoEy90EeBxgPzARmBhltUAJyo0wzVjYWwCQIVU6hAOZHyl+L8ZI7
        IFkEUxDjtivMLJ9TsONKqlDIaJkJSAnIrZSNXtFYADVQUvmZGK+55/SNHB8ofS3Gj2cParSYHfor7Gbx
        OMDewExgxtmuGUIJyMUrjSwBFkCNbJq1xjl/nxO6UAD7Br0rDw8y/lVjW7bq40srxHh9AbbPswKnygbX
        lxIYRAnIgzYaVQIsgClScBY5xa6lnUHG9Ie9g0dgpf4qi2BiI0/fBT07jGRvoAS6MBuQEpCLVRpRAiyA
        aTJWBDOWowj8vqDXXxJ45puh0rw7cRxRkn+CfXb4yESgALowEzgeJdCIo9AsgDpRcPJOsduXMwd9Ub/c
        oWj4nohxjNTQypIabK+HhU4HzATkqjUpgd9gAOu5UrEA6kxp7iqntM9wZ0n5AyWVXxd6/j1Vxr29zeYu
        gN12yMhkQAF0FjP6OJTAfRjEepUAC6BBbHSH5axBV+T5c+DpmBE8VWX8U2NQ5XfjGSl/O+SBwFopZHQH
        SmA5SuB+DGQ9SoAF0GAiL++cq/SMUZWT25O/CHl8QPmPQF4ROBWkBDAbkBJ4oPrg1iQLoAnIO/I2qpwT
        7TPcE/b5uUDp26ssi7YRW/9dkGcCpgoKQI4LHI0SkCfeTGcmwAJoInJ8IOz3HYz5LHh64I09Er3ackm9
        pWx+6Wg2zweETAeUwJJplgALoEXIA0+D3sFDA9f/BpZDG14/4H8M8orA6YLZwDEogQcxqFMpARZAi8Hy
        y4auPiVUGvvF7XN8ALOfr0GeCagHdiYwlRJgAcSEwPMPgfIg07Z4VBnCfzfkI8LqxRRLgAUQIwqZfD92
        Cd6P5SLvV0z7boEc/2AB1JMp7A6wAGLG2LEBd3B5oPR3sXzk3Y3VllsK1C+FnlZhv7HfnNSFGmcCLICY
        Ein/tZFrSliW8qbldB4b6DNHQp4JqDc1lAALIMZsnq17Is+sC1zzSyyr1L0otaj890DeE9AI7O6AnCKs
        OvhWFkACCF1zDLw62P3as2rLMZEWs/4W2N7vDGwkmAnIxUJyxeB4MwEWQEKIvLw8kiyKlHkMy62WA72x
        FYV2DeS1AI0CBeB83PWXogR+iwGvttKwABLE+v5BFXjmlFCN3WGY+MeWo8zugDPt1yONALsCcu/AsSiB
        ancRsgASxjbnpM6SMieEnr5xbPm9cnkmSmz9H4UsgEZj7yKUW4krnyfAAkgoWG7HYPl9Cf6xbHkmTP95
        yKsBmwFKQJ4nsAIlUP5kIRZAggnc3MJQ6U1YjnIZceKOC2D6/9K57nAPZjX2G5GGssH1O+3jxfY8Y5AF
        kHA2usOzIuWfhmUpx3kSd73A5swJ+1zYs9Z+G9Jwgkxuz4NG5WnDLIAUsHm2zkSePhXLU64XSNTBwdGs
        vwzyYqBmgpmAPGhUSmAHCuCT9tckwRScfFegzNsQKnnTdGIuGiplzdtKvBqw+WAWMAMuDV3zDvsrknBe
        dpyOkjJvRrDkXfzPlQctxp4WepwBEFI3Ak+PIFj/C+N/5aBrLghdzcuBCaknoadXImDyfIF4P43Y9S+B
        LABC6g1K4HiE7HIY22sFIsxUIt4QREhjQMCWI2iXwifLgxcbPfN9yAIgpFFErlmGsF0C41cCnr8dsgAI
        aSShq2UmcBmMWQn4OyALgJBGE2X1Cky35ZhAbA4M2jsCWQCENIPA8zWC91UYj1OEnrkL8qEghDSLKGOG
        Q9dcgwC2/GKhQOl7IAuAkGYSKv0mBPB62Or3EMhNTCwAQpoN9r3l3oFbYOtuIPLMg9wFIKQFyNOFIjf/
        bgTxDtiiW4n9hyELgJBWsMVZ240gfhCWPyimibIACGkp6/sH+0KlNyCQEz1GvgGyAAhpOWFfbgEC+Wko
        jx2vEtRGyQIgJBYgkEvgNtjEawRYAITEhtAz8iyB62CTnirEAiAkVgTKvB3hlDMDTTgoyAIgJFYUnHx3
        5JoPI6DyMpkqoa2nLABCYkeQ8eeGSm9GSBt8UJAFQEgswa7AYoT0atjAewZYAITEltDLyT0Dt8IGXSnI
        AiAkthQcpwNB/UfYoOMBLABCYs0G158dKv0ZBPaJVwd4urIACIk9JdcsiZT5NkJb5+sDWACEJIKS8k9G
        aOWdknW8PoAFQEgiOM9Z0xu6poTgyuvIq4R5KrIACEkMKICDEVx57VidniTEAiAkUUSueQuKoE67AiwA
        QhLFBc7KbhRAgAA/+upA1yoLgJDEUXLzCxHg78BpnhVgARCSSKKsf1Kk/HuqB3uysgAISSSbZq3JlDz/
        swjyNN4+zAIgJLGUPHNUqPQ07hVgARCSaIqe+WCgzEPVAz6RLABCEs3H+4fnoAD+D4GewrUBLABCEk+U
        NSdiV+De6iHfmywAQhLP5tm6B4H+HHzmlQGfSBYAIakgdHNHI9Q1XiHIAiAkFex+eIg+B8F+8tVBH08W
        ACGpAQVwEIJ9O5zkaUEWACGpAsE+HU7y6UEsAEJSRaT8eYE72QeJsgAISR2Bp9+LgE/inQIsAEJSR9iX
        2ydS5iaEfNerQ18uC4CQVILdgHcg5BPMAlgAhKSSQq/pi7yJZgEsAEJSS1Hl1gXKPF49/CILgJDUssEd
        VAj6DXCcWQALgJBUEyp9IsI+znUBLABCUk2gchmE/XpYZRbAAiAk9QRePo/AV5kFsAAIST2F7Kru0Bt7
        inDFLIAFQEhbUOjLr4hedacgC4CQtuCsgZGZodLfQvDLZgEsAELahqhfL0EJlD1GnAVASNtQmq27UADf
        +PMsgAVASFuxsXv4MJTAUywAQtqQ85w1naGnr0IBvMgCIKQNCXrMAdHYE4T9h1gAhLQZBSffEXpmG8L/
        IAuAkDbk/J7BuaHSP4ad9leEkHZhq7Oso5gZGoYd9leEkHaikBnqgvZvhBBCCCGEEEIISTeO8//Po+D5
        YX7ABAAAAABJRU5ErkJggg==
</value>
  </data>
</root>